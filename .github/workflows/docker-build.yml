name: Build and Push MultiTalk

on:
  push:
    branches: [ master, main ]
    paths:
      - 'runpod-multitalk/Dockerfile.v*'
      - 'runpod-multitalk/handler_v*.py'
      - 'runpod-multitalk/multitalk_v*.py'
      - '.github/workflows/docker-build.yml'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., v131-minimal)'
        required: false
        default: 'v131-minimal'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 2048
        swap-size-mb: 4096
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'
        build-mount-path: '/var/lib/docker'
        
    - name: Additional cleanup
      run: |
        echo "=== Before additional cleanup ==="
        df -h
        echo "=== Cleaning up more space ==="
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache
        sudo rm -rf /usr/local/.ghcup
        sudo rm -rf /usr/local/share/boost
        sudo rm -rf /usr/local/share/powershell
        sudo rm -rf /usr/share/swift
        sudo apt-get clean
        sudo docker system prune -af --volumes
        echo "=== After additional cleanup ==="
        df -h
        
    - uses: actions/checkout@v4
    
    - name: Check available disk space
      run: |
        echo "=== Disk Space After Cleanup ==="
        df -h
        echo "=== Available Space ==="
        df -h / | awk 'NR==2{printf "Available: %s\n", $4}'
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: berrylands
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Determine version
      id: version
      run: |
        if [ "${{ github.event.inputs.version }}" != "" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          # Default to v131-minimal
          VERSION="v131-minimal"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Building version: $VERSION"
        
        # Extract tag from version (e.g., v130-final -> v130)
        TAG=$(echo "$VERSION" | sed 's/-final//' | sed 's/-fixed//')
        echo "tag=$TAG" >> $GITHUB_OUTPUT
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./runpod-multitalk
        file: ./runpod-multitalk/Dockerfile.${{ steps.version.outputs.version }}
        platforms: linux/amd64
        push: true
        tags: |
          berrylands/multitalk-runpod:${{ steps.version.outputs.tag }}
          berrylands/multitalk-runpod:${{ steps.version.outputs.version }}
          berrylands/multitalk-runpod:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILD_TIME=${{ github.event.repository.updated_at }}
          BUILD_ID=gh-${{ github.run_id }}
    
    - name: Update RunPod template
      if: success()
      run: |
        echo "âœ… Docker image pushed successfully!"
        echo "ðŸ“¦ Image: berrylands/multitalk-runpod:${{ steps.version.outputs.tag }}"
        echo ""
        echo "Template ID: 5y1gyg4n78kqwz"
        echo "New image: berrylands/multitalk-runpod:${{ steps.version.outputs.tag }}"
        echo ""
        echo "To update the template:"
        echo "1. Go to RunPod dashboard"
        echo "2. Navigate to Templates"
        echo "3. Update the Docker image"
    
    - name: Create summary
      run: |
        echo "# MultiTalk Build Complete! ðŸŽ‰" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Version: ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "**Tag:** ${{ steps.version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
        echo "**Image:** berrylands/multitalk-runpod:${{ steps.version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## RunPod Template" >> $GITHUB_STEP_SUMMARY
        echo "Template ID: \`5y1gyg4n78kqwz\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## V131 Features" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… PyTorch 2.1.0 base image (avoiding NumPy conflicts)" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Torchvision 0.16.0" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… NumPy 1.26.4 (fixed for Numba compatibility)" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Numba 0.59.1 (compatible with NumPy 1.26.4)" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… xformers 0.0.22" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… xfuser, scikit-image, and all dependencies" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "1. Update RunPod template with new image" >> $GITHUB_STEP_SUMMARY
        echo "2. Test with S3 files (1.wav and multi1.png)" >> $GITHUB_STEP_SUMMARY