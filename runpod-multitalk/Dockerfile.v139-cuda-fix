# MultiTalk V139 - Fix CUDA version mismatch
FROM pytorch/pytorch:2.1.0-cuda11.8-cudnn8-runtime AS base

# Set timezone and clean up in single layer
ENV DEBIAN_FRONTEND=noninteractive TZ=UTC
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
    apt-get update && apt-get install -y --no-install-recommends git ffmpeg && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Stage 2: Install dependencies with careful ordering
FROM base AS deps

# CRITICAL: Uninstall any existing torch packages first
RUN pip uninstall -y torch torchvision torchaudio xformers || true

# Install NumPy 1.26.4 first
RUN pip install --no-cache-dir "numpy==1.26.4" "numba==0.59.1"

# Install CUDA 11.8 specific torch packages with exact versions
# Force reinstall to ensure we get the right CUDA version
RUN pip install --no-cache-dir --force-reinstall --index-url https://download.pytorch.org/whl/cu118 \
    torch==2.1.0+cu118 \
    torchvision==0.16.0+cu118 \
    torchaudio==2.1.0+cu118

# Install xformers AFTER torch to ensure compatibility
RUN pip install --no-cache-dir --force-reinstall --index-url https://download.pytorch.org/whl/cu118 \
    xformers==0.0.22.post7

# Verify CUDA versions match
RUN python -c "import torch; import torchvision; print(f'Torch CUDA: {torch.version.cuda}'); print(f'Torch version: {torch.__version__}'); print(f'Torchvision version: {torchvision.__version__}')"

# Install other dependencies WITHOUT upgrading torch
RUN pip install --no-cache-dir --no-deps \
    "opencv-python>=4.9.0.80" \
    "diffusers>=0.31.0" \
    "transformers>=4.49.0" \
    "tokenizers>=0.20.3" \
    "accelerate>=1.1.1" \
    "tqdm" \
    "imageio==2.33.1" \
    "imageio-ffmpeg==0.4.9" \
    "easydict" \
    "ftfy" \
    "dashscope" \
    "gradio>=5.0.0" \
    "pyloudnorm==0.1.1" \
    "soundfile>=0.12.1" \
    "librosa>=0.10.0" \
    "einops>=0.8.0" \
    "huggingface-hub>=0.19.0" \
    "ninja" \
    "packaging" \
    "safetensors>=0.3.1" \
    "loguru" \
    "scikit-image>=0.21.0" \
    "boto3" \
    "runpod==1.7.3" \
    "Pillow==10.2.0" \
    "scipy" \
    "sentencepiece" \
    "regex" \
    "filelock" \
    "requests" \
    "pyyaml"

# Install xfuser and distvae last
RUN pip install --no-cache-dir --no-deps "xfuser>=0.4.1" distvae

# Verify torch wasn't upgraded
RUN python -c "import torch; assert '2.1.0+cu118' in torch.__version__, f'Wrong torch version: {torch.__version__}'"

# Clean up
RUN pip cache purge && rm -rf /tmp/* /var/tmp/* ~/.cache

# Stage 3: Final image
FROM deps AS final

# Set environment variables
ENV PYTHONPATH=/app/cog_multitalk_reference:/app:/runpod-volume/models \
    HF_HOME=/runpod-volume/huggingface \
    TRANSFORMERS_CACHE=/runpod-volume/huggingface \
    MODEL_PATH=/runpod-volume/models \
    PYTHONUNBUFFERED=1 \
    CUDA_VISIBLE_DEVICES=0

WORKDIR /app

# Copy and extract reference implementation
COPY cog_multitalk_reference.tar.gz /app/
RUN tar -xzf cog_multitalk_reference.tar.gz && \
    rm cog_multitalk_reference.tar.gz && \
    echo "Reference implementation contents:" && \
    ls -la /app/cog_multitalk_reference/

# Copy our files
COPY multitalk_reference_wrapper.py /app/
COPY handler_v136_reference.py /app/handler.py
COPY s3_handler.py /app/

# Final verification
RUN echo "=== V139 Final Verification ===" && \
    python -c "import torch; print(f'PyTorch: {torch.__version__}')" && \
    python -c "import torchvision; print(f'Torchvision: {torchvision.__version__}')" && \
    python -c "import numpy; print(f'NumPy: {numpy.__version__}')" && \
    echo "Testing wan import..." && \
    python -c "import sys; sys.path.insert(0, '/app/cog_multitalk_reference'); import wan; print('âœ… wan imported successfully')" && \
    echo "V139: CUDA version mismatch fixed"

CMD ["python", "-u", "/app/handler.py"]