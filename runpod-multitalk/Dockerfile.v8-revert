# Revert to original S3 behavior
FROM berrylands/multitalk-complete:v4

# Create a simple handler that uses the original download_input function
RUN cat > /app/handler_fixed.py << 'EOF'
# Import the original handler
from complete_multitalk_handler import *

# Override the audio processing to use the original download_input
import sys
sys.path.insert(0, '/app')
from s3_handler import download_input

# Patch the handler function
original_handler = handler

def patched_handler(job):
    job_input = job.get('input', {})
    
    # If audio is provided, use download_input
    if 'audio' in job_input and isinstance(job_input['audio'], str):
        try:
            # Use the ORIGINAL download_input logic
            # It checks for S3 URL, otherwise assumes base64
            audio_data = download_input(job_input['audio'])
            # Replace the string with the downloaded bytes
            job_input['audio'] = audio_data
        except Exception as e:
            log_message(f"Audio preprocessing failed: {e}", "ERROR")
    
    # Same for reference_image
    if 'reference_image' in job_input and isinstance(job_input['reference_image'], str):
        try:
            image_data = download_input(job_input['reference_image'])
            job_input['reference_image'] = image_data
        except Exception as e:
            log_message(f"Image preprocessing failed: {e}", "WARNING")
    
    # Call original handler with preprocessed data
    return original_handler(job)

# Replace handler
handler = patched_handler
EOF

# Use the patched handler
RUN mv /app/handler.py /app/handler_original.py && \
    mv /app/handler_fixed.py /app/handler.py

# Update version
ENV VERSION="8.0.0"
ENV BUILD_TIME="2025-01-11T15:30:00Z"
ENV BUILD_ID="multitalk-v8-revert"

WORKDIR /app
CMD ["python", "-u", "/app/handler.py"]